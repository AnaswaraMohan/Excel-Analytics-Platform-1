import { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { authService } from '../utils/auth';
import { toast } from 'react-toastify';
import { 
  Box, 
  Tabs, 
  TabList, 
  Tab, 
  TabPanels,
  TabPanel,
  Flex,
  Text,
  useColorModeValue
} from '@chakra-ui/react';

const Dashboard = () => {
  const [user, setUser] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [activeTab, setActiveTab] = useState(0);
  const [showUserMenu, setShowUserMenu] = useState(false);
  const navigate = useNavigate();
  
  const tabBg = useColorModeValue('white', 'gray.800');
  const indicatorColor = useColorModeValue('blue.500', 'blue.300');

  useEffect(() => {
    const fetchUserProfile = async () => {
      try {
        const userProfile = await authService.getProfile();
        setUser(userProfile);
      } catch (error) {
        toast.error('Failed to fetch user profile');
      } finally {
        setIsLoading(false);
      }
    };

    fetchUserProfile();
  }, []);
  // Navigation items as tabs
  const tabs = [
    { name: 'Dashboard', icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6' },
    { name: 'Files', icon: 'M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2' },
    { name: 'Analytics', icon: 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z' },
    { name: 'Reports', icon: 'M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z' },
    { name: 'Profile', icon: 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z' },
  ];

  // Cards for the dashboard section
  const dashboardCards = [
    {
      title: 'Upload Files',
      description: 'Upload and manage your Excel files',
      icon: 'M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12',
      color: 'bg-blue-500',
      iconColor: 'text-blue-500',
      action: 'Upload',
      soon: true
    },
    {
      title: 'Analyze Data',
      description: 'Visualize and understand your data',
      icon: 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z',
      color: 'bg-green-500',
      iconColor: 'text-green-500',
      action: 'Analyze',
      soon: true
    },
    {
      title: 'Generate Reports',
      description: 'Create and share professional reports',
      icon: 'M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z',
      color: 'bg-purple-500',
      iconColor: 'text-purple-500',
      action: 'Generate',
      soon: true
    },
    {
      title: 'AI Insights',
      description: 'Get intelligent insights from your data',
      icon: 'M13 10V3L4 14h7v7l9-11h-7z',
      color: 'bg-orange-500',
      iconColor: 'text-orange-500',
      action: 'Explore',
      soon: true
    }
  ];

  // Key metrics for dashboard
  const metrics = [
    { label: 'Files', value: '0', icon: 'M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z', color: 'text-blue-600' },
    { label: 'Sheets', value: '0', icon: 'M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z', color: 'text-emerald-600' },
    { label: 'Data Points', value: '0', icon: 'M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z', color: 'text-purple-600' },
  ];

  // Handle click away from user menu
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (showUserMenu && !event.target.closest('.user-menu-container')) {
        setShowUserMenu(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [showUserMenu]);
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="bg-white shadow sticky top-0 z-10 flex justify-between items-center px-6 h-16">
          <h1 className="text-xl font-semibold text-blue-600">Excel Analytics Platform</h1>
        </div>
        <div className="flex items-center justify-center h-96">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
        </div>
      </div>
    );
  }

  // Handle tab changes
  const handleTabChange = (index) => {
    setActiveTab(index);
    // If it's the Profile tab (index 4), you could navigate to a separate profile page
    if (index === 4) {
      navigate('/profile');
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Top Navbar */}
      <header className="bg-white shadow sticky top-0 z-10 flex justify-between items-center px-6 h-16">
        <h1 className="text-xl font-semibold text-blue-600">Excel Analytics Platform</h1>
        
        {/* User menu dropdown */}
        <div className="relative user-menu-container">
          <button 
            onClick={() => setShowUserMenu(!showUserMenu)}
            className="flex items-center space-x-2 focus:outline-none"
          >
            <div className="h-9 w-9 rounded-full bg-blue-100 flex items-center justify-center">
              <span className="text-blue-600 font-semibold">
                {user?.name?.charAt(0).toUpperCase() || 'U'}
              </span>
            </div>
            <span className="hidden md:block text-sm text-gray-700">{user?.name}</span>
            <svg className="h-4 w-4 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clipRule="evenodd" />
            </svg>
          </button>
          
          {/* Dropdown menu */}
          {showUserMenu && (
            <div className="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10 ring-1 ring-black ring-opacity-5">
              <div className="px-4 py-2 border-b border-gray-100">
                <p className="text-sm font-medium text-gray-900">{user?.name}</p>
                <p className="text-xs text-gray-500 truncate">{user?.email}</p>
              </div>
              <button 
                onClick={() => handleTabChange(4)}
                className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
              >
                Your Profile
              </button>
              <a href="#" className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Settings</a>
              <div className="border-t border-gray-100"></div>
              <a href="#" className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Sign out</a>
            </div>
          )}
        </div>
      </header>
      
      {/* Tab Navigation with Chakra UI */}
      <Box position="sticky" top="4rem" zIndex="9" bg={tabBg} shadow="sm">
        <Tabs 
          index={activeTab} 
          onChange={handleTabChange} 
          variant="unstyled" 
          position="relative"
          maxW="7xl" 
          mx="auto" 
          px={4}
        >
          <TabList borderBottom="1px" borderColor="gray.200">
            {tabs.map((tab, index) => (
              <Tab 
                key={tab.name}
                py={4}
                px={4}
                fontWeight="medium"
                color="gray.600"
                _selected={{ color: 'blue.600', fontWeight: 'semibold' }}
                fontSize={{ base: 'sm', md: 'md' }}
                display="flex"
                alignItems="center"
              >
                <svg 
                  className="h-5 w-5 md:mr-2"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d={tab.icon} />
                </svg>
                <Text display={{ base: 'none', sm: 'block' }}>{tab.name}</Text>
              </Tab>
            ))}
            <Box 
              position="absolute" 
              h="2px" 
              bg={indicatorColor} 
              bottom="0" 
              left="0" 
              as={Tabs.Indicator} 
              borderRadius="1px"
            />
          </TabList>
        </Tabs>
      </Box>
          {/* Main content area */}
      <main className="max-w-7xl mx-auto px-4 py-6 overflow-y-auto">
              
              <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
                {/* Dashboard section */}
                {activeSection === 'dashboard' && (
                  <div className="space-y-8">
                    {/* Key metrics */}
                    <section aria-labelledby="metrics-heading">
                      <div className="sr-only" id="metrics-heading">Key Metrics</div>
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                        {metrics.map((metric, index) => (
                          <div 
                            key={index} 
                            className="bg-white overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300 rounded-lg"
                          >
                            <div className="p-5">
                              <div className="flex items-center">
                                <div className="flex-shrink-0 flex items-center justify-center">
                                  <svg 
                                    className={`h-8 w-8 ${metric.color}`} 
                                    xmlns="http://www.w3.org/2000/svg" 
                                    fill="none" 
                                    viewBox="0 0 24 24" 
                                    stroke="currentColor"
                                  >
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d={metric.icon} />
                                  </svg>
                                </div>
                                <div className="ml-5 w-0 flex-1">
                                  <dl>
                                    <dt className="text-sm font-medium text-gray-500 truncate">
                                      {metric.label}
                                    </dt>
                                    <dd>
                                      <div className="text-xl font-semibold text-gray-900">
                                        {metric.value}
                                      </div>
                                    </dd>
                                  </dl>
                                </div>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </section>
                    
                    {/* Welcome section */}
                    <section aria-labelledby="welcome-heading" className="bg-white shadow-md rounded-lg">
                      <div className="p-6">
                        <div className="flex items-center space-x-3">
                          <div className="flex-shrink-0 bg-blue-500 rounded-md p-2">
                            <svg className="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                          </div>
                          <h2 id="welcome-heading" className="text-lg font-medium text-gray-600">
                            Welcome to Excel Analytics Platform
                          </h2>
                        </div>
                        <div className="mt-4">
                          <p className="text-gray-600">
                            Transform your Excel data into powerful insights with our advanced analytics tools. Upload your spreadsheets, analyze the data, and generate reports with ease.
                          </p>
                        </div>
                        <div className="bg-blue-50 rounded-md p-4 mt-4">
                          <div className="flex">
                            <div className="flex-shrink-0">
                              <svg className="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 flex-1 md:flex md:justify-between">
                              <p className="text-sm text-blue-700">
                                Your first step is to upload an Excel file to start analyzing your data.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </section>
                    
                    {/* Feature cards */}
                    <section aria-labelledby="features-heading">
                      <div className="sr-only" id="features-heading">Key Features</div>
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        {dashboardCards.map((card) => (
                          <div 
                            key={card.title} 
                            className="bg-white overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 rounded-lg"
                          >
                            <div className="p-5">
                              <div className="flex items-center justify-center">
                                <div className={`flex-shrink-0 rounded-md p-3 ${card.color}`}>
                                  <svg 
                                    className="h-7 w-7 text-white" 
                                    xmlns="http://www.w3.org/2000/svg" 
                                    fill="none" 
                                    viewBox="0 0 24 24" 
                                    stroke="currentColor"
                                  >
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d={card.icon} />
                                  </svg>
                                </div>
                              </div>
                              <div className="mt-4 text-center">
                                <h3 className="text-lg font-medium text-gray-900">{card.title}</h3>
                                <p className="mt-2 text-sm text-gray-500">{card.description}</p>
                              </div>
                              <div className="mt-5">
                                <button
                                  disabled={card.soon}
                                  className={`
                                    w-full inline-flex items-center justify-center px-4 py-2.5 border border-transparent rounded-md shadow-sm text-sm font-medium
                                    transition-all duration-300
                                    ${card.soon 
                                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed hover:bg-gray-200' 
                                      : `bg-${card.color.split('-')[1]}-600 text-white hover:bg-${card.color.split('-')[1]}-700`}
                                  `}
                                >
                                  {card.action}
                                  {card.soon && <span className="ml-2 text-xs">(Coming Soon)</span>}
                                </button>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </section>
                    
                    {/* Account information */}
                    <section aria-labelledby="account-heading" className="bg-white shadow-md rounded-lg">
                      <div className="px-4 py-5 sm:p-6">
                        <div className="flex justify-between items-center">
                          <h2 id="account-heading" className="text-lg font-medium text-gray-900">
                            Account Information
                          </h2>
                          <div>
                            <button
                              type="button"
                              className="inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
                            >
                              Edit
                            </button>
                          </div>
                        </div>
                      
                        <div className="mt-5 border-t border-gray-200 pt-4">
                          <dl className="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
                            <div>
                              <dt className="text-sm font-medium text-gray-500">Full name</dt>
                              <dd className="mt-1 text-sm text-gray-900">{user?.name}</dd>
                            </div>
                            <div>
                              <dt className="text-sm font-medium text-gray-500">Email address</dt>
                              <dd className="mt-1 text-sm text-gray-900">{user?.email}</dd>
                            </div>
                            <div>
                              <dt className="text-sm font-medium text-gray-500">Role</dt>
                              <dd className="mt-1 text-sm text-gray-900">
                                <span className={`inline-flex px-2.5 py-0.5 rounded-full text-xs font-medium ${
                                  user?.role === 'admin' 
                                    ? 'bg-purple-100 text-purple-800' 
                                    : 'bg-green-100 text-green-800'
                                }`}>
                                  {user?.role}
                                </span>
                              </dd>
                            </div>
                            <div>
                              <dt className="text-sm font-medium text-gray-500">Member since</dt>
                              <dd className="mt-1 text-sm text-gray-900">
                                {user?.createdAt ? new Date(user.createdAt).toLocaleDateString() : 'N/A'}
                              </dd>
                            </div>
                          </dl>
                        </div>
                      </div>
                    </section>
                  </div>
                )}
                
                {/* Files section */}
                {activeSection === 'files' && (
                  <div className="space-y-6 mt-6">
                    <div className="bg-white shadow-md rounded-lg overflow-hidden">
                      <div className="px-4 py-5 sm:p-6">
                        <div className="sm:flex sm:items-center sm:justify-between">
                          <div>
                            <h3 className="text-lg leading-6 font-medium text-gray-900">
                              Excel Files
                            </h3>
                            <p className="mt-1 text-sm text-gray-500">
                              Upload and manage your Excel spreadsheets
                            </p>
                          </div>
                          <div className="mt-3 sm:mt-0 sm:ml-4">
                            <button
                              type="button"
                              disabled
                              className="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gray-300 hover:bg-gray-400 transition-colors cursor-not-allowed"
                            >
                              <svg className="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                              </svg>
                              Upload New File (Coming Soon)
                            </button>
                          </div>
                        </div>
                      </div>
                      
                      {/* Empty state */}
                      <div className="bg-white px-4 py-12 sm:px-6 text-center border-t border-gray-200">
                        <svg className="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
                        </svg>
                        <h3 className="mt-2 text-sm font-medium text-gray-900">No files</h3>
                        <p className="mt-1 text-sm text-gray-500">
                          Get started by uploading an Excel file.
                        </p>
                      </div>
                    </div>
                  </div>
                )}
                
                {/* Analytics section */}
                {activeSection === 'analytics' && (
                  <div className="space-y-6 mt-6">
                    <div className="bg-white shadow-md rounded-lg overflow-hidden">
                      <div className="px-4 py-5 sm:p-6">
                        <div>
                          <h3 className="text-lg leading-6 font-medium text-gray-900">
                            Data Analytics
                          </h3>
                          <p className="mt-1 text-sm text-gray-500">
                            Visualize and analyze your Excel data
                          </p>
                        </div>
                      </div>
                      
                      {/* Empty state */}
                      <div className="bg-white px-4 py-12 sm:px-6 text-center border-t border-gray-200">
                        <svg className="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                        </svg>
                        <h3 className="mt-2 text-sm font-medium text-gray-900">No analytics available</h3>
                        <p className="mt-1 text-sm text-gray-500">
                          Upload an Excel file to begin analyzing your data.
                        </p>
                      </div>
                    </div>
                  </div>
                )}
                
                {/* Reports section */}
                {activeSection === 'reports' && (
                  <div className="space-y-6 mt-6">
                    <div className="bg-white shadow-md rounded-lg overflow-hidden">
                      <div className="px-4 py-5 sm:p-6">
                        <div>
                          <h3 className="text-lg leading-6 font-medium text-gray-900">
                            Reports
                          </h3>
                          <p className="mt-1 text-sm text-gray-500">
                            Generate and share reports from your data
                          </p>
                        </div>
                      </div>
                      
                      {/* Empty state */}
                      <div className="bg-white px-4 py-12 sm:px-6 text-center border-t border-gray-200">
                        <svg className="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                        </svg>
                        <h3 className="mt-2 text-sm font-medium text-gray-900">No reports yet</h3>
                        <p className="mt-1 text-sm text-gray-500">
                          Start by analyzing your data to generate reports.
                        </p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </main>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
